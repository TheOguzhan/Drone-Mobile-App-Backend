// Code generated by ent, DO NOT EDIT.

package address

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the address type in the database.
	Label = "address"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAddressLine holds the string denoting the address_line field in the database.
	FieldAddressLine = "address_line"
	// FieldLatitude holds the string denoting the latitude field in the database.
	FieldLatitude = "latitude"
	// FieldLongtitude holds the string denoting the longtitude field in the database.
	FieldLongtitude = "longtitude"
	// EdgeAddressMaster holds the string denoting the address_master edge name in mutations.
	EdgeAddressMaster = "address_master"
	// Table holds the table name of the address in the database.
	Table = "addresses"
	// AddressMasterTable is the table that holds the address_master relation/edge.
	AddressMasterTable = "addresses"
	// AddressMasterInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	AddressMasterInverseTable = "users"
	// AddressMasterColumn is the table column denoting the address_master relation/edge.
	AddressMasterColumn = "user_address_slaves"
)

// Columns holds all SQL columns for address fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldAddressLine,
	FieldLatitude,
	FieldLongtitude,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "addresses"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_address_slaves",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
