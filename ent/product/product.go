// Code generated by ent, DO NOT EDIT.

package product

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the product type in the database.
	Label = "product"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldFotos holds the string denoting the fotos field in the database.
	FieldFotos = "fotos"
	// EdgeProductOrder holds the string denoting the product_order edge name in mutations.
	EdgeProductOrder = "product_order"
	// Table holds the table name of the product in the database.
	Table = "products"
	// ProductOrderTable is the table that holds the product_order relation/edge.
	ProductOrderTable = "orders"
	// ProductOrderInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	ProductOrderInverseTable = "orders"
	// ProductOrderColumn is the table column denoting the product_order relation/edge.
	ProductOrderColumn = "product_product_order"
)

// Columns holds all SQL columns for product fields.
var Columns = []string{
	FieldID,
	FieldPrice,
	FieldTitle,
	FieldDescription,
	FieldName,
	FieldFotos,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PriceValidator is a validator for the "price" field. It is called by the builders before save.
	PriceValidator func(float64) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
